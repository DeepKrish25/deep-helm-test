name: Helm Chart CI

on:
  push:
    branches:
      - main
      - stage
      - prod
    paths:
      - 'charts/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to access full commit history

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Auto bump version if chart changed
        run: |
          set -e
          cd charts/my-app

          # Determine branch/environment
          branch="${GITHUB_REF##*/}"
          echo "Current branch: $branch"

          if [[ "$branch" == "main" ]]; then
            env="dev"
            suffix="-dev.${{ github.run_number }}"
            values_file="values-dev.yaml"
          elif [[ "$branch" == "stage" ]]; then
            env="staging"
            suffix="-rc.${{ github.run_number }}"
            values_file="values-staging.yaml"
          elif [[ "$branch" == "prod" ]]; then
            env="prod"
            suffix=""
            values_file="values.yaml"
          else
            echo "Unsupported branch: $branch"
            exit 1
          fi

          # Export for next steps
          echo "VALUES_FILE=$values_file" >> $GITHUB_ENV
          echo "ENV=$env" >> $GITHUB_ENV

          # Detect changes
          before_commit="${{ github.event.before }}"
          if [[ "$before_commit" == "0000000000000000000000000000000000000000" ]]; then
            before_commit=$(git rev-parse HEAD~1 || echo "")
          fi

          if [[ -z "$before_commit" ]]; then
            echo "No previous commit found, assuming first commit."
            changed=true
          else
            if git diff --name-only "$before_commit" "${{ github.sha }}" | grep -q .; then
              changed=true
            else
              changed=false
            fi
          fi

          if [[ "$changed" == true ]]; then
            echo "Changes detected in chart. Bumping version..."

            version=$(yq '.version' Chart.yaml)
            echo "Current version: $version"

            numeric_version=$(echo "$version" | cut -d '-' -f 1)
            IFS='.' read -r major minor patch <<< "$numeric_version"

            commit_msg=$(git log -1 --pretty=%B)
            echo "Latest commit message: $commit_msg"

            # Default bump
            bump_type="patch"

            if echo "$commit_msg" | grep -q "feat!"; then
              bump_type="major"
            elif echo "$commit_msg" | grep -q "feat"; then
              bump_type="minor"
            fi

            echo "Detected bump type: $bump_type"

            if [[ "$bump_type" == "major" ]]; then
              major=$((major + 1))
              minor=0
              patch=0
            elif [[ "$bump_type" == "minor" ]]; then
              minor=$((minor + 1))
              patch=0
            else
              patch=$((patch + 1))
            fi

            new_version="${major}.${minor}.${patch}${suffix}"
            echo "New version: $new_version"

            yq e -i ".version = \"$new_version\"" Chart.yaml

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -am "chore(${env}): bump chart version to $new_version"
            git push
          else
            echo "No changes to chart. Skipping version bump."
          fi

      - name: Helm lint
        run: helm lint charts/my-app

      - name: Package chart
        run: |
          mkdir -p helm-charts
          helm package charts/my-app -d helm-charts

      - name: Create/update Helm repo index
        run: |
          helm repo index helm-charts \
            --url "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/helm-charts"

      - name: Commit and push chart artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add helm-charts/
          git commit -m "chore(${ENV}): publish chart and index [skip ci]" || echo "No changes to commit"
          git push
